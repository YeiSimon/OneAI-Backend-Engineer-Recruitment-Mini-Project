"""Create database

Revision ID: 5e5d5063cd17
Revises: 
Create Date: 2025-03-29 00:13:18.262549

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5e5d5063cd17'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('entities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('meta_info', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('news',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=300), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=False),
    sa.Column('thumbnail_url', sa.String(length=512), nullable=True),
    sa.Column('image', sa.LargeBinary(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('image'),
    sa.UniqueConstraint('slug')
    )
    op.create_index('idx_news_category_id', 'news', ['category_id'], unique=False)
    op.create_index('idx_news_is_featured', 'news', ['is_featured'], unique=False)
    op.create_index('idx_news_published_at', 'news', ['published_at'], unique=False)
    op.create_table('news_entities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('news_id', sa.Integer(), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['entity_id'], ['entities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['news_id'], ['news.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('news_id', 'entity_id', 'role', name='uq_news_entity_role')
    )
    op.create_table('news_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('news_id', sa.Integer(), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['news_id'], ['news.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('news_id')
    )
    op.create_index('idx_news_metrics_view_count', 'news_metrics', ['view_count'], unique=False, postgresql_using='btree', postgresql_ops={'view_count': 'DESC'})
    op.create_table('news_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('news_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['news_id'], ['news.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('news_id', 'tag_id', name='uq_news_tag')
    )
    op.create_index('idx_news_tags_news_id', 'news_tags', ['news_id'], unique=False)
    op.create_index('idx_news_tags_tag_id', 'news_tags', ['tag_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_news_tags_tag_id', table_name='news_tags')
    op.drop_index('idx_news_tags_news_id', table_name='news_tags')
    op.drop_table('news_tags')
    op.drop_index('idx_news_metrics_view_count', table_name='news_metrics', postgresql_using='btree', postgresql_ops={'view_count': 'DESC'})
    op.drop_table('news_metrics')
    op.drop_table('news_entities')
    op.drop_index('idx_news_published_at', table_name='news')
    op.drop_index('idx_news_is_featured', table_name='news')
    op.drop_index('idx_news_category_id', table_name='news')
    op.drop_table('news')
    op.drop_table('tags')
    op.drop_table('entities')
    op.drop_table('categories')
    # ### end Alembic commands ###
